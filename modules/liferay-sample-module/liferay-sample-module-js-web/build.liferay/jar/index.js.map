{"version":3,"sources":["index.js"],"names":["polyfills","require","runtime","main","_ADAPT_RT_","module","exports","_LIFERAY_PARAMS_"],"mappings":";;;;AAAA;;;;;;;;;;;AAWA;AACA,UAAMA,YAAYC,QAAQ,0CAAR,CAAlB;AACA,UAAMC,UAAUD,QAAQ,wCAAR,CAAhB;AACA,UAAME,OAAOF,QAAQ,qCAAR,CAAb;;AAEA;AACAD;AACAE;;AAEA;AACA,QAAIE,aAAaH,QAAQ,YAAR,CAAjB;;AAEA;AACAI,WAAOC,OAAP,GAAiB,UAASC,gBAAT,EAA2B;AAC1CJ,WAAKI,gBAAL,EAAuBH,UAAvB;AACD,KAFD","file":"index.js","sourcesContent":["/**\n * This file has been generated by the liferay-js:adapt Yeoman generator. It is\n * the main entry point of the adapted portlet and its responsibility is to load\n * and bootstrap the Angular application in a way that fits Liferay portlet\n * architecture.\n *\n * This file should be deleted after each `npm run build:liferay` but it isn't \n * you may delete it safely as it will be recreated and deleted on the next \n * build.\n */\n\n// Require webpack bundles generated by Angular CLI build.\nconst polyfills = require(\"./liferay-sample-module-js-web/polyfills.js\");\nconst runtime = require(\"./liferay-sample-module-js-web/runtime.js\");\nconst main = require(\"./liferay-sample-module-js-web/main.js\");\n\n// Load Angular polyfills and runtime engine modules.\npolyfills();\nruntime();\n\n// Require our adapt runtime support module\nvar _ADAPT_RT_ = require(\"./adapt-rt\"); \n\n// Invoke Angular main module passing Liferay's standard entry point arguments.\nmodule.exports = function(_LIFERAY_PARAMS_) {\n  main(_LIFERAY_PARAMS_, _ADAPT_RT_);\n};\n"]}